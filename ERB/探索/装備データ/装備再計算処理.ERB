@装備再計算処理(対象キャラ)
#DIM 対象キャラ
#DIM 装備指輪
#DIM 装備耳飾り
#DIM 装備証
#DIM ステータス一時計算
#DIM 指輪基礎効果有効化フラグ
#DIMS スタイルキー
#DIMS 料理名
VARSET LOCALS

;装備アイテム番号だけ退避させて一旦全部消す
装備指輪 = 装備ステータス補正保存:対象キャラ:装備指輪番号
装備耳飾り = 装備ステータス補正保存:対象キャラ:装備耳飾り番号
装備証 = 装備ステータス補正保存:対象キャラ:装備証番号
VARSET 装備ステータス補正保存:対象キャラ:0
装備ステータス補正保存:対象キャラ:装備指輪番号 = 装備指輪
装備ステータス補正保存:対象キャラ:装備耳飾り番号 = 装備耳飾り
装備ステータス補正保存:対象キャラ:装備証番号 = 装備証

;スタイル補正処理
IF CSTR:対象キャラ:スタイル管理文字列 != ""
	スタイルキー '= REPLACE(CSTR:対象キャラ:スタイル管理文字列, ESCAPE("["), "")
	スタイルキー '= REPLACE(スタイルキー, "]", "_")
	TRYCALLFORM スタイルステータス補正_%スタイルキー%(対象キャラ)
ENDIF

;指輪補正処理
TRYCCALLFORM 指輪基礎効果適用判定_%DT_CELL_GETS("所持指輪データベース", 装備指輪, "指輪名", 1)%(対象キャラ)
	指輪基礎効果有効化フラグ = RESULT
CATCH
	指輪基礎効果有効化フラグ = 1
ENDCATCH
IF 指輪基礎効果有効化フラグ
	SPLIT DT_CELL_GETS("所持指輪データベース", 装備指輪, "基礎ステータス補正", 1), "_", LOCALS
	FOR LOCAL:1, 0, 30, 2
		IF LOCALS:(LOCAL:1) == ""
			BREAK
		ENDIF
		装備ステータス補正保存:対象キャラ:(LOCALS:(LOCAL:1)) += TOINT(LOCALS:(LOCAL:1 + 1))
	NEXT
ENDIF
;オプション効果は常に発揮される
VARSET LOCALS, ""
SPLIT DT_CELL_GETS("所持指輪データベース", 装備指輪, "オプションステータス補正", 1), "_", LOCALS
FOR LOCAL:1, 0, (指輪オプション最大数 * 2), 2
	IF LOCALS:(LOCAL:1) == ""
		BREAK
	ENDIF
	装備ステータス補正保存:対象キャラ:(LOCALS:(LOCAL:1)) += TOINT(LOCALS:(LOCAL:1 + 1))
NEXT

;耳飾り補正処理
IF DT_CELL_GETS("所持耳飾りデータベース", 装備耳飾り, "変更属性", 1) != ""
	;0を火属性にしちゃったので数値そのままだと属性変更してるかどうか判別がつかないため、装備による属性変更は属性番号+10で保存
	装備ステータス補正保存:対象キャラ:属性 = 属性文字列数値変換(DT_CELL_GETS("所持耳飾りデータベース", 装備耳飾り, "変更属性", 1)) + 10
ELSEIF CSTR:対象キャラ:スタイル管理文字列 != ""
	装備ステータス補正保存:対象キャラ:属性 = 装備ステータス補正保存:対象キャラ:基礎属性変更
ENDIF

;ジョブ証補正処理
VARSET 一時ステータス補正保存
TRYCALLFORM 証関数_%DT_CELL_GETS("所持ジョブ証データベース", 装備証, "ジョブ証名")%("装備補正", 対象キャラ)
FOR LOCAL, 0, 200
	装備ステータス補正保存:対象キャラ:LOCAL += 一時ステータス補正保存:LOCAL
NEXT

;その他ステータス補正処理
IF CFLAG:対象キャラ:滞在期間 > 0
	VARSET 一時ステータス補正保存

	;料理セットによる補正
	FOR LOCAL, 1, 6
		料理名 '= DT_CELL_GETS("料理メニューデータベース",  現在設定メニュー:LOCAL, "メニュー名", 1)
		TRYCALLFORM 料理効果_装備ステータス補正_%料理名%(対象キャラ)
	NEXT
	FOR LOCAL, 0, 200
		装備ステータス補正保存:対象キャラ:LOCAL += 一時ステータス補正保存:LOCAL
	NEXT

	;その他個別補正
	IF 海改造度:6:2
		;海底散歩魔法
		一時ステータス補正保存:水耐性 += 3
	ENDIF
ENDIF

;パーティキャラ補正
IF 隊列算出_味方(対象キャラ) > -1
	;算出キャラがPTにいる時、PT全員分の補正を見に行く
	FOR LOCAL, 0, 14
		SIF LOCAL > 3 && LOCAL < 10
			CONTINUE
		SIF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
			CONTINUE
		;パーティ補正があるかどうか
		TRYCALLFORM PT編成時ステータス補正_{NO:(BATTLE_STATE:LOCAL:キャラ登録番号)}(対象キャラ)
	NEXT
ENDIF
