;-------------------------------------------------
;対象キャラの弱点コマンドリストの取得
;-------------------------------------------------
@GET_WEAKCOMMAND_LIST(対象キャラ, 弱点コマンドリスト, 看破状態リスト)
#FUNCTION
#DIM  対象キャラ
#DIMS REF 弱点コマンドリスト ; 結果格納用リスト1(参照渡し)
#DIM  REF 看破状態リスト     ; 結果格納用リスト2(参照渡し)

#DIM  CONST 要求熟知_BASE = 100, 120, 140, 170, 200, 240, 280, 340
#DIM  要求熟知, 弱点コマンド数上限
#DIM  要求熟知表示フラグ
#DIM  L_CNT
#DIM  弱点コマンド数
#DIM  追加弱点コマンド数
#DIM  ループ回数
#DIM  リスト件数
#DIM  格納数

; 要求熟知テーブルの設定(未設定時に1回のみ実行)
IF 要求熟知:0 == 0
	FOR L_CNT, 0, VARSIZE("要求熟知_BASE")
		要求熟知:L_CNT = 要求熟知_BASE:L_CNT
	NEXT
	; 設定がない分は暫定で1コマンドごとに+60する
	FOR L_CNT, VARSIZE("要求熟知_BASE"), 弱点コマンド数上限
		要求熟知:L_CNT = 要求熟知:(L_CNT - 1) + 60
	NEXT
ENDIF

VARSET 弱点コマンドリスト
VARSET 看破状態リスト
要求熟知表示フラグ = 0
弱点コマンド数 = 0
格納数 = 0
; リストのサイズが違う場合は小さい方を基準にする
リスト件数 = MIN(VARSIZE("弱点コマンドリスト"), VARSIZE("看破状態リスト"))
; リスト件数を超えた場合でもコマンド数を更新したいのでループ回数は弱点コマンド数の上限値
FOR L_CNT, 0, 弱点コマンド数上限
	; 弱点コマンド設定がなくなったら終了
	SIF 弱点コマンド枠:対象キャラ:L_CNT == ""
		BREAK
	弱点コマンド数 ++
	; リスト件数を超えた場合は格納しない
	SIF L_CNT >= リスト件数
		CONTINUE
	; 弱点コマンドと看破状態をリストに格納
	IF 弱点看破:対象キャラ:L_CNT || OPTION変数:弱点コマンド全表示
		; 看破済の弱点コマンド
		弱点コマンドリスト:L_CNT '= GET_WEAKCOMMAND_NAME(弱点コマンド枠:対象キャラ:L_CNT)
		看破状態リスト:L_CNT = 1
	ELSEIF あなた特殊能力:弱点洞察術
		; 未看破の弱点コマンド/弱点洞察術あり
		IF EXP:対象キャラ:肉体熟知 < 要求熟知:L_CNT
			; 肉体熟知が足りない場合は不明
			IF !要求熟知表示フラグ
				弱点コマンドリスト:L_CNT '= @"(肉体熟知が{要求熟知:L_CNT}必要です)"
				要求熟知表示フラグ = 1
			ELSE
				弱点コマンドリスト:L_CNT '= "？？？？？"
			ENDIF
		ELSE
			; 肉体熟知が足りている場合は一部マスク
			弱点コマンドリスト:L_CNT '= GET_WEAKCOMMAND_NAME(弱点コマンド枠:対象キャラ:L_CNT, 対象キャラ)
		ENDIF
	ELSE
		; 未看破の弱点コマンド/弱点洞察術なし
		弱点コマンドリスト:L_CNT '= "？？？？？"
	ENDIF
	格納数 ++
NEXT
;以下追加弱点
追加弱点コマンド数 = 0
FOR L_CNT, 0, 追加弱点コマンド数上限
	; 弱点コマンド設定がなくなったら終了
	SIF 追加弱点コマンド枠:対象キャラ:L_CNT == ""
		BREAK
	追加弱点コマンド数 ++
	; リスト件数を超えた場合は格納しない
	SIF L_CNT + 格納数 >= リスト件数
		CONTINUE
	; 弱点コマンドをリストに格納
	弱点コマンドリスト:(L_CNT + 格納数) '= GET_WEAKCOMMAND_NAME(追加弱点コマンド枠:対象キャラ:L_CNT)
	; 追加弱点は常に看破済み
	看破状態リスト:(L_CNT + 格納数) = 1
NEXT
RETURNF 弱点コマンド数 + 追加弱点コマンド数

;-------------------------------------------------
;弱点コマンド名の取得
;-------------------------------------------------
@GET_WEAKCOMMAND_NAME(弱点コマンド設定値, マスク用キャラ番号 = -1)
#FUNCTIONS
#DIMS 弱点コマンド設定値
#DIM  マスク用キャラ番号
#DIMS 弱点コマンドSPLIT用配列, 10
#DIMS 弱点コマンド名
#DIM  弱点コマンド番号
#DIMS 派生元コマンド名
#DIMS 派生コマンド名
#DIM  TEMP_TARGET
#DIM  TEMP_現在位置
#DIM  TEMP_現在マップ種別
#DIM  PLAYER側フラグ

弱点コマンド欄表示名 = 
VARSET 弱点コマンドSPLIT用配列
PLAYER側フラグ = 0
IF STRFIND(弱点コマンド設定値, "_PLAYER側") >= 0
	PLAYER側フラグ = 1
	弱点コマンド設定値 '= REPLACE(弱点コマンド設定値, "_PLAYER側", "")
ENDIF
IF STRFIND(弱点コマンド設定値, "_") >= 0
	;要素が2つ以上の弱点コマンド
	SPLIT 弱点コマンド設定値, "_", 弱点コマンドSPLIT用配列
	IF ISNUMERIC(弱点コマンドSPLIT用配列:0)
		弱点コマンド番号 = TOINT(弱点コマンドSPLIT用配列:0)
		SELECTCASE 弱点コマンド番号
			CASE 370 TO 374
				;キャラ固有コマンド
				;・TARGETを一時的に対象のキャラに変更してコマンド名を取得
				TEMP_TARGET = TARGET
				TARGET = TOINT(弱点コマンドSPLIT用配列:1)
				CALLFORMF COMNAME{弱点コマンド番号}
				TARGET = TEMP_TARGET
				弱点コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
				弱点コマンド名 '= @"キャラ固有：%弱点コマンド名%"
			CASE 380 TO 384
				;場所固有コマンド
				;・MASTERの現在位置を一時的に対象の場所に変更してコマンド名を取得
				TEMP_現在位置 = CFLAG:MASTER:現在位置
				TEMP_現在マップ種別 = CFLAG:MASTER:現在マップ種別
				CFLAG:MASTER:現在位置 = TOINT(弱点コマンドSPLIT用配列:2)
				CFLAG:MASTER:現在マップ種別 = TOINT(弱点コマンドSPLIT用配列:1)
				CALLFORMF COMNAME{弱点コマンド番号}
				CFLAG:MASTER:現在位置 = TEMP_現在位置
				CFLAG:MASTER:現在マップ種別 = TEMP_現在マップ種別
				弱点コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
				弱点コマンド名 '= @"場所固有：%弱点コマンド名%"
			CASE 385 TO 389
				;お祭りコマンド
				;・お祭りコマンドは弱点にしない
				弱点コマンド名 '= ""
			CASEELSE
				;派生コマンド
				;・派生元コマンドと派生コマンドのコマンド名を連結
				;派生元コマンド名取得
				CALLFORMF COMNAME{弱点コマンド番号}
				派生元コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
				;派生コマンド名取得
				弱点コマンド欄表示名 = 
				CALLFORMF COMNAME_S%弱点コマンド設定値%
				派生コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
				;コマンド名を連結
				弱点コマンド名 '= @"%派生元コマンド名%派生：%派生コマンド名%"
		ENDSELECT
	ELSE
		;_の前部分が数字ではないパターン
		;マッサージ用コマンド(MASSAGE_***)、モード系(MODE_***)
		SELECTCASE 弱点コマンドSPLIT用配列:0
			CASE "MASSAGE"
				IF 弱点コマンドSPLIT用配列:2 != ""
					;派生コマンド
					;・派生元コマンドと派生コマンドのコマンド名を連結
					;派生元コマンド名取得
					CALLFORMF MASSAGE_COMNAME%弱点コマンドSPLIT用配列:1%
					派生元コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
					;派生コマンド名取得
					弱点コマンド欄表示名 = 
					CALLFORMF MASSAGE_COMNAME_S%弱点コマンドSPLIT用配列:1%_%弱点コマンドSPLIT用配列:2%
					派生コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
					;コマンド名を連結
					弱点コマンド名 '= @"%派生元コマンド名%派生：%派生コマンド名%"
				ELSE
					CALLFORMF MASSAGE_COMNAME%弱点コマンドSPLIT用配列:1%
					弱点コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
				ENDIF
			CASE "MODE"
				弱点コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, "", 弱点コマンドSPLIT用配列:1)
			CASE "RAPE"
				IF 弱点コマンドSPLIT用配列:2 != ""
					;派生コマンド
					;・派生元コマンドと派生コマンドのコマンド名を連結
					;派生元コマンド名取得
					CALLFORMF RAPE_COMNAME%弱点コマンドSPLIT用配列:1%
					派生元コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
					;派生コマンド名取得
					弱点コマンド欄表示名 = 
					CALLFORMF RAPE_COMNAME_S%弱点コマンドSPLIT用配列:1%_%弱点コマンドSPLIT用配列:2%
					派生コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
					;コマンド名を連結
					弱点コマンド名 '= @"%派生元コマンド名%派生：%派生コマンド名%"
				ELSE
					CALLFORMF RAPE_COMNAME%弱点コマンドSPLIT用配列:1%
					弱点コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
				ENDIF
			CASE "SITUATION"
				弱点コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, "", @"シチュ：%弱点コマンドSPLIT用配列:1%")
		ENDSELECT
	ENDIF
ELSE
	;要素が1つの弱点コマンド
	CALLFORMF COMNAME%弱点コマンド設定値%
	弱点コマンド名 '= 弱点コマンド名確定(マスク用キャラ番号, 弱点コマンド欄表示名, TSTR:コマンド名受渡)
ENDIF
IF PLAYER側フラグ
	弱点コマンド名 += "：PLAYER側"
ENDIF
RETURNF 弱点コマンド名

;-------------------------------------------------
;COMNAME系関数実行後用のコマンド名確定処理(マスク処理含む)
;-------------------------------------------------
@弱点コマンド名確定(マスク用キャラ番号, コマンド名候補:0, コマンド名候補:1)
#FUNCTIONS
#DIM マスク用キャラ番号
#DIMS コマンド名候補, 2
#DIMS 弱点コマンド名
IF マスク用キャラ番号 != -1
	RETURNF マスク_弱点コマンド(マスク用キャラ番号, コマンド名候補:0, コマンド名候補:1)
ELSEIF コマンド名候補:0 != ""
	RETURNF コマンド名候補:0
ELSE
	RETURNF コマンド名候補:1
ENDIF

;-------------------------------------------------
;弱点コマンド名のマスク処理
;-------------------------------------------------
@マスク_弱点コマンド(対象キャラ, マスク元:1, マスク元:2)
#FUNCTIONS
#DIM 対象キャラ
#DIMS マスク元, 3
#DIM コマンド文字長さ
#DIM HASH
#DIM CHARPOS, 2
#DIMS マスク結果

IF マスク元:1 != ""
	マスク元:0 '= マスク元:1
ELSE
	マスク元:0 '= マスク元:2
ENDIF

コマンド文字長さ = STRLENSU(マスク元:0)
SIF コマンド文字長さ <= 0
	RETURNF ""

;乱数で文字が変わるとバレバレなので名前とコマンド文字からハッシュを作る
HASH = 0
FOR LOCAL, 0, STRLENSU(CALLNAME:対象キャラ)
	HASH ^= ENCODETOUNI(CALLNAME:対象キャラ, LOCAL)
NEXT
FOR LOCAL, 0, コマンド文字長さ
	HASH ^= ENCODETOUNI(マスク元:0, LOCAL)
NEXT

;1文字選ぶ
CHARPOS:0 = HASH % コマンド文字長さ
CHARPOS:1 = -1
IF コマンド文字長さ >= 5
	;コマンドが5文字以上の場合はもう1文字
	CHARPOS:1 = (HASH / コマンド文字長さ) % (コマンド文字長さ - 1)
	SIF CHARPOS:0 <= CHARPOS:1
		CHARPOS:1 += 1
ENDIF

マスク結果 '= ""
FOR LOCAL, 0, コマンド文字長さ
	IF LOCAL == CHARPOS:0 || LOCAL == CHARPOS:1
		マスク結果 += CHARATU(マスク元:0, LOCAL)
	ELSE
		マスク結果 += "？"
	ENDIF
NEXT
RETURNF マスク結果
